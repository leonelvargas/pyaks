{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "servers_pyplanpg_name": {
            "defaultValue": "pyplanpg",
            "type": "String"
        },
        "privateEndpoints_private_name": {
            "defaultValue": "private",
            "type": "String"
        },
        "managedClusters_pyplan_aks_name": {
            "defaultValue": "pyplan-aks",
            "type": "String"
        },
        "virtualNetworks_azure_pyplan_aks_vnet_name": {
            "defaultValue": "azure-pyplan-aks-vnet",
            "type": "String"
        },
        "privateDnsZones_privatelink_postgres_database_azure_com_name": {
            "defaultValue": "privatelink.postgres.database.azure.com",
            "type": "String"
        },
        "networkInterfaces_private_nic_17dea8c0_152c_444c_9ac6_e8f4100cfd8c_name": {
            "defaultValue": "private.nic.17dea8c0-152c-444c-9ac6-e8f4100cfd8c",
            "type": "String"
        },
        "workspaces_DefaultWorkspace_066f9ea0_74db_4751_921d_94dec804dc98_WUS2_externalid": {
            "defaultValue": "/subscriptions/066f9ea0-74db-4751-921d-94dec804dc98/resourceGroups/DefaultResourceGroup-WUS2/providers/Microsoft.OperationalInsights/workspaces/DefaultWorkspace-066f9ea0-74db-4751-921d-94dec804dc98-WUS2",
            "type": "String"
        },
        "publicIPAddresses_5bc2b666_6576_468d_9c67_b2ded21657dc_externalid": {
            "defaultValue": "/subscriptions/066f9ea0-74db-4751-921d-94dec804dc98/resourceGroups/MC_azure-pyplan-aks_pyplan-aks_westus2/providers/Microsoft.Network/publicIPAddresses/5bc2b666-6576-468d-9c67-b2ded21657dc",
            "type": "String"
        },
        "userAssignedIdentities_pyplan_aks_agentpool_externalid": {
            "defaultValue": "/subscriptions/066f9ea0-74db-4751-921d-94dec804dc98/resourceGroups/MC_azure-pyplan-aks_pyplan-aks_westus2/providers/Microsoft.ManagedIdentity/userAssignedIdentities/pyplan-aks-agentpool",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.DBforPostgreSQL/servers",
            "apiVersion": "2017-12-01",
            "name": "[parameters('servers_pyplanpg_name')]",
            "location": "westus2",
            "sku": {
                "name": "GP_Gen5_2",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "properties": {
                "storageProfile": {
                    "storageMB": 102400,
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled",
                    "storageAutogrow": "Enabled"
                },
                "version": "11",
                "sslEnforcement": "Enabled",
                "minimalTlsVersion": "TLSEnforcementDisabled",
                "infrastructureEncryption": "Disabled",
                "publicNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_postgres_database_azure_com_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 1,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworks_azure_pyplan_aks_vnet_name')]",
            "location": "westus2",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/8"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.240.0.0/16",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2021-05-01",
            "name": "[parameters('managedClusters_pyplan_aks_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), 'default')]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Free"
            },
            "identity": {
                "principalId": "80b911f2-7d88-4866-a44a-84cf88be3da8",
                "tenantId": "b1fa8639-7e82-40c6-9124-d124b22c4414",
                "type": "SystemAssigned"
            },
            "properties": {
                "kubernetesVersion": "1.21.1",
                "dnsPrefix": "[concat(parameters('managedClusters_pyplan_aks_name'), '-dns')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": 2,
                        "vmSize": "Standard_D2s_v3",
                        "osDiskSizeGB": 128,
                        "osDiskType": "Managed",
                        "kubeletDiskType": "OS",
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), 'default')]",
                        "maxPods": 110,
                        "type": "VirtualMachineScaleSets",
                        "maxCount": 5,
                        "minCount": 1,
                        "enableAutoScaling": true,
                        "orchestratorVersion": "1.21.1",
                        "nodeLabels": {},
                        "mode": "System",
                        "osType": "Linux",
                        "osSKU": "Ubuntu",
                        "enableFIPS": false
                    }
                ],
                "windowsProfile": {
                    "adminUsername": "azureuser",
                    "enableCSIProxy": true
                },
                "servicePrincipalProfile": {
                    "clientId": "msi"
                },
                "addonProfiles": {
                    "azurepolicy": {
                        "enabled": true
                    },
                    "httpApplicationRouting": {
                        "enabled": false
                    },
                    "omsAgent": {
                        "enabled": true,
                        "config": {
                            "logAnalyticsWorkspaceResourceID": "[parameters('workspaces_DefaultWorkspace_066f9ea0_74db_4751_921d_94dec804dc98_WUS2_externalid')]"
                        }
                    }
                },
                "nodeResourceGroup": "[concat('MC_azure-', parameters('managedClusters_pyplan_aks_name'), '_', parameters('managedClusters_pyplan_aks_name'), '_westus2')]",
                "enableRBAC": true,
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPolicy": "azure",
                    "loadBalancerSku": "Standard",
                    "loadBalancerProfile": {
                        "managedOutboundIPs": {
                            "count": 1
                        },
                        "effectiveOutboundIPs": [
                            {
                                "id": "[parameters('publicIPAddresses_5bc2b666_6576_468d_9c67_b2ded21657dc_externalid')]"
                            }
                        ]
                    },
                    "serviceCidr": "10.0.0.0/16",
                    "dnsServiceIP": "10.0.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16",
                    "outboundType": "loadBalancer"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": false
                },
                "identityProfile": {
                    "kubeletidentity": {
                        "resourceId": "[parameters('userAssignedIdentities_pyplan_aks_agentpool_externalid')]",
                        "clientId": "7805be24-4f9b-4228-9073-81f355aa944e",
                        "objectId": "70f3e18e-d8c7-4baf-bf94-12c6be56c39f"
                    }
                },
                "autoScalerProfile": {
                    "balance-similar-node-groups": "false",
                    "expander": "random",
                    "max-empty-bulk-delete": "10",
                    "max-graceful-termination-sec": "600",
                    "max-node-provision-time": "15m",
                    "max-total-unready-percentage": "45",
                    "new-pod-scale-up-delay": "0s",
                    "ok-total-unready-count": "3",
                    "scale-down-delay-after-add": "10m",
                    "scale-down-delay-after-delete": "10s",
                    "scale-down-delay-after-failure": "3m",
                    "scale-down-unneeded-time": "10m",
                    "scale-down-unready-time": "20m",
                    "scale-down-utilization-threshold": "0.5",
                    "scan-interval": "10s",
                    "skip-nodes-with-local-storage": "false",
                    "skip-nodes-with-system-pods": "true"
                }
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/array_nulls')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_analyze_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.05",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_analyze_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_freeze_max_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "200000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_max_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_multixact_freeze_max_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "400000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_naptime')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "15",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_vacuum_cost_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_vacuum_cost_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_vacuum_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.05",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_vacuum_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/autovacuum_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/azure.replication_support')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "REPLICA",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/backend_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/backslash_quote')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "safe_encoding",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/bgwriter_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/bgwriter_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/bgwriter_lru_maxpages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/bgwriter_lru_multiplier')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/bytea_output')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "hex",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/check_function_bodies')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/checkpoint_completion_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.9",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/checkpoint_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/client_encoding')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "sql_ascii",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/client_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "notice",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/commit_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/commit_siblings')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/connection_throttling')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/constraint_exclusion')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "partition",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/cpu_index_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.005",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/cpu_operator_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.0025",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/cpu_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.01",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/cursor_tuple_fraction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/datestyle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "iso, mdy",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/deadlock_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/debug_print_parse')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/debug_print_plan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/debug_print_rewritten')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/default_statistics_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/default_text_search_config')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "pg_catalog.english",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/default_transaction_deferrable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/default_transaction_isolation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "read committed",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/default_transaction_read_only')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/default_with_oids')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/effective_cache_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "655360",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_bitmapscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_hashagg')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_hashjoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_indexonlyscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_indexscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_material')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_mergejoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_nestloop')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_partitionwise_aggregate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_partitionwise_join')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_seqscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_sort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/enable_tidscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/escape_string_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/exit_on_error')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/extra_float_digits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/force_parallel_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/from_collapse_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/geqo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/geqo_effort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/geqo_generations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/geqo_pool_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/geqo_seed')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/geqo_selection_bias')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "2.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/geqo_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "12",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/gin_fuzzy_search_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/gin_pending_list_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/hot_standby_feedback')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/idle_in_transaction_session_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/intervalstyle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "postgres",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/join_collapse_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/lc_monetary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "English_United States.1252",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/lc_numeric')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "English_United States.1252",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/lo_compat_privileges')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/lock_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_autovacuum_min_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_checkpoints')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_disconnections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_error_verbosity')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "default",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_line_prefix')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "%t-%c-",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_lock_waits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_min_duration_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_min_error_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "error",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "warning",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_replication_commands')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_retention_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_statement_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/log_temp_files')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/logging_collector')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/maintenance_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "131072",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_locks_per_transaction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_parallel_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_parallel_workers_per_gather')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_prepared_transactions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_replication_slots')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_standby_archive_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "30000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_standby_streaming_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "30000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_wal_senders')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/max_wal_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/min_parallel_index_scan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "524288",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/min_parallel_table_scan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "8388608",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/min_wal_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/old_snapshot_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/operator_precedence_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/parallel_leader_participation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/parallel_setup_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/parallel_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_qs.interval_length_minutes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "15",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_qs.max_query_text_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "6000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_qs.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_qs.replace_parameter_placeholders')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_qs.retention_period_in_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "7",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_qs.track_utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_stat_statements.max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_stat_statements.save')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_stat_statements.track')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pg_stat_statements.track_utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pgms_wait_sampling.history_period')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pgms_wait_sampling.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/postgis.gdal_enabled_drivers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "DISABLE_ALL",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/quote_all_identifiers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/random_page_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "4.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/row_security')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/search_path')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "\"$user\", public",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/seq_page_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "1.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/session_replication_role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "origin",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/shared_preload_libraries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/statement_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/synchronize_seqscans')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/synchronous_commit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/tcp_keepalives_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/tcp_keepalives_idle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/tcp_keepalives_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/temp_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/timezone')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "UTC",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/track_activities')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/track_activity_query_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/track_commit_timestamp')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/track_counts')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/track_functions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/track_io_timing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/transform_null_equals')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_cost_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_cost_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_cost_page_dirty')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_cost_page_hit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_cost_page_miss')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_defer_cleanup_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_freeze_min_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "50000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_freeze_table_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "150000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_multixact_freeze_min_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "5000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/vacuum_multixact_freeze_table_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "150000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/wal_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/wal_receiver_status_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/wal_writer_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/wal_writer_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "128",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/xmlbinary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "base64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/configurations",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/xmloption')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "value": "content",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/azure_maintenance')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/azure_sys')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/postgres')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/databases",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/pyplan_db')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "English_United States.1252"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/firewallRules",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/ClientIPAddress_2021-8-3_15-45-2')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "startIpAddress": "201.212.41.250",
                "endIpAddress": "201.212.41.250"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/securityAlertPolicies",
            "apiVersion": "2017-12-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[parameters('networkInterfaces_private_nic_17dea8c0_152c_444c_9ac6_e8f4100cfd8c_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), 'default')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "postgresqlServer-postgresqlServer.privateEndpoint",
                        "properties": {
                            "privateIPAddress": "10.240.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/pyplanpg')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint private with resource guid 6f61d66e-6758-45a6-b4b6-d30718af5773"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.240.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.240.0.0/16",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters/agentPools",
            "apiVersion": "2021-05-01",
            "name": "[concat(parameters('managedClusters_pyplan_aks_name'), '/agentpool')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_pyplan_aks_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), 'default')]"
            ],
            "properties": {
                "count": 2,
                "vmSize": "Standard_D2s_v3",
                "osDiskSizeGB": 128,
                "osDiskType": "Managed",
                "kubeletDiskType": "OS",
                "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), 'default')]",
                "maxPods": 110,
                "type": "VirtualMachineScaleSets",
                "maxCount": 5,
                "minCount": 1,
                "enableAutoScaling": true,
                "orchestratorVersion": "1.21.1",
                "nodeLabels": {},
                "mode": "System",
                "osType": "Linux",
                "osSKU": "Ubuntu",
                "enableFIPS": false
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/privateEndpointConnections",
            "apiVersion": "2018-06-01",
            "name": "[concat(parameters('servers_pyplanpg_name'), '/private-89ac1950-4c1c-4ea7-af7f-aad9d8676d4b')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_private_name'))]"
            ],
            "properties": {
                "privateEndpoint": {
                    "id": "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_private_name'))]"
                },
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto-approved"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/mbmsz5xndh2cu')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[parameters('privateEndpoints_private_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_private_name')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('servers_pyplanpg_name'))]",
                            "groupIds": [
                                "postgresqlServer"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_azure_pyplan_aks_vnet_name'), 'default')]"
                },
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('privateEndpoints_private_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_private_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-postgres-database-azure-com",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
                        }
                    }
                ]
            }
        }
    ]
}