{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "clusterNecessity": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Value should be either true or false. If true is set, the template deploy a Pyplan-AKS cluster."
            }
        },
        "clusterName": {
            "type": "string",
            "defaultValue": "pyplan-aks",
            "metadata": {
                "description": "The name of the cluster."
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/8",
            "metadata": {
                "description": "A CIDR notation IP range for cluster Virtual Network."
            }
        },
        "aksVirtualNetworkSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.240.0.0/16",
            "metadata": {
                "description": "A CIDR notation IP range for default subnet of the cluster. The system pods will be deployed there."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "defaultValue": "1.21.1",
            "metadata": {
                "description": "Kubernetes version."
            }
        },
        "serviceCidr": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "Containers DNS server IP address."
            }
        },
        "dockerBridgeCidr": {
            "type": "string",
            "defaultValue": "172.17.0.1/16",
            "metadata": {
                "description": "A CIDR notation IP for Docker bridge."
            }
        },
        "serverSubnetNecessity": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Value should be either true or false. If true is set, the template deploy the subnet for the Postgres server. The following parameters will be used in both situations."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "azure-pyplan-aks-vnet",
            "metadata": {
                "description": "Name of the cluster Virtual Network. This subnet must be in the current cluster virtual Network. If clusterNecessity is true use the default value."
            }
        },
        "virtualNetworkSubnetName": {
            "type": "string",
            "defaultValue": "pyplanpg",
            "metadata": {
                "description": "Name of the subnet for Postgresql. This subnet must be in the current cluster virtual Network."
            }
        },
        "virtualNetworkSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.1.0.0/22",
            "metadata": {
                "description": "A CIDR notation IP range for Postgres server. This subnet must be in the current cluster virtual Network."
            }
        },
        "administratorLogin": {
            "type": "string",
            "defaultValue": "pyplan_db_user",
            "metadata": {
                "description": "Database User."
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Database Password."
            }
        },
        "serverName": {
            "type": "string",
            "defaultValue": "pyplanpg",
            "metadata": {
                "description": "Name of the Postgresql flexible server."
            }
        },
        "dbName": {
            "type": "string",
            "defaultValue": "pyplan_db",
            "metadata": {
                "description": "Name of the Database."
            }
        },
        "storageSizeMB": {
            "type": "int",
            "defaultValue": 131072,
            "metadata": {
                "description": "Server size in Mb."
            }
        },
        "haEnabled": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Enable/Disable High Availability of the server."
            }
        },
        "availabilityZone": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "HA ZONES."
            }
        },
        "version": {
            "type": "string",
            "defaultValue": "12",
            "metadata": {
                "description": "Postgres version."
            }
        },
        "backupRetentionDays": {
            "type": "int",
            "defaultValue": 7,
            "metadata": {
                "description": "Retention days of Postgres server backup."
            }
        },
        "geoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Enable/Disable geoRedundantBackup of the server."
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Vm size for Postgres server."
            }
        },
        "agentpoolNecessity": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Value should be either true or false. If true is set, the template deploy a Pyplan nodepool"
            }
        },
        "agentpoolSubnetNecessity": {
            "type": "bool",
            "defaultValue": true,
            "allowedValues": [
                true,
                false
            ],
            "metadata": {
                "description": "Value should be either true or false. If true is set, the template deploy the subnet for the Pyplan nodepool"
            }
        },
        "agentpoolName": {
            "type": "string",
            "defaultValue": "pyplanpods",
            "metadata": {
                "description": "Pyplan pods will be deployed there."
            }
        },
        "agentpoolSubnetName": {
            "type": "string",
            "defaultValue": "pyplan",
            "metadata": {
                "description": "Subnet name for the Pyplan nodepool. This subnet must be in the current cluster virtual Network. If agentpoolSubnetNecessity is false, complete the current parameter with already subnet deployed."
            }
        },
        "agentpoolVirtualNetworkSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.230.0.0/16",
            "metadata": {
                "description": "A CIDR notation IP range for Pyplan nodepool. This subnet must be in the current cluster virtual Network. If agentpoolSubnetNecessity is false, complete the current parameter with already subnet deployed."
            }
        },
        "agentpoolMinCountNodes": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Autoscale is enabled, set the Min of nodes for the Pyplan nodepool."
            }
        },
        "agentpoolMaxCountNodes": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "Autoscale is enabled, set the Max of nodes for the Pyplan nodepool."
            }
        },
        "agentpoolVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2",
            "metadata": {
                "description": "Pyplan nodepool vm size."
            }
        }
    },
    "variables": {
        "api": "2020-02-14-preview"
    },
    "resources": [
        {
            "condition": "[parameters('clusterNecessity')]",
            "apiVersion": "2021-02-01",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[resourceGroup().location]",
            "name": "[parameters('clusterName')]",
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": true,
                "dnsPrefix": "[concat(parameters('clusterName'), '-dns')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": 30,
                        "count": 1,
                        "enableAutoScaling": true,
                        "minCount": 1,
                        "maxCount": 2,
                        "vmSize": "Standard_D2s_v3",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "maxPods": 110,
                        "availabilityZones": [],
                        "vnetSubnetID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/default')]"
                    }
                ],
                "networkProfile": {
                    "loadBalancerSku": "standard",
                    "networkPlugin": "azure",
                    "networkPolicy": "azure",
                    "serviceCidr": "[parameters('serviceCidr')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
                },
                "apiServerAccessProfile": {
                    "enablePrivateCluster": false
                },
                "addonProfiles": {
                    "httpApplicationRouting": {
                        "enabled": false
                    },
                    "azurepolicy": {
                        "enabled": true
                    },
                    "omsAgent": {
                        "enabled": false
                    }
                }
            },
            "tags": {},
            "identity": {
                "type": "SystemAssigned"
            }
        },
        {
            "condition": "[parameters('clusterNecessity')]",
            "apiVersion": "2020-11-01",
            "name": "azure-pyplan-aks-vnet",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "properties": {
                "subnets": [
                    {
                        "name": "default",
                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/default')]",
                        "properties": {
                            "addressPrefix": "[parameters('aksVirtualNetworkSubnetAddressPrefix')]"
                        }
                    }
                ],
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                }
            },
            "tags": {}
        },
        {
            "condition": "[parameters('clusterNecessity')]",
            "type": "Microsoft.Resources/deployments",
            "name": "ClusterSubnetRoleAssignmentDeployment-20210803152314",
            "apiVersion": "2017-05-10",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[concat(parameters('virtualNetworkName'), '/default/Microsoft.Authorization/4ba9e2b2-296d-4354-846d-e74fefd870c9')]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                                "principalId": "[reference(parameters('clusterName'),'2021-02-01','Full').identity.principalId]",
                                "scope": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/default')]"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ]
        },
        {
            "condition": "[parameters('serverSubnetNecessity')]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2021-02-01",
            "name": "[concat(parameters('virtualNetworkName'), '/', parameters('virtualNetworkSubnetName'))]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
              "addressPrefix": "[parameters('virtualNetworkSubnetAddressPrefix')]"
            }
        },
        {
            "condition": "[parameters('agentpoolSubnetNecessity')]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2021-02-01",
            "name": "[concat(parameters('virtualNetworkName'), '/', parameters('agentpoolSubnetName'))]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
              "addressPrefix": "[parameters('agentpoolVirtualNetworkSubnetAddressPrefix')]"
            }
        },
        { 
            "condition": "[parameters('agentpoolNecessity')]",
            "apiVersion": "2021-02-01",
            "type": "Microsoft.ContainerService/managedClusters/agentPools",
            "name": "[concat(parameters('clusterName'),'/', parameters('agentpoolName'))]",
            "location": "[resourceGroup().name]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', parameters('agentpoolSubnetName'))]",
                "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ContainerService/managedClusters/', parameters('clusterName'))]"
            ],
            "properties": {
                "name": "[parameters('agentpoolName')]",
                "count": 1,
                "vmSize": "[parameters('agentpoolVmSize')]",
                "osDiskSizeGB": 30,
                "type": "VirtualMachineScaleSets",
                "nodeLabels": {
                    "env":"Pyplan"
                },
                "mode": "User",
                "osType": "Linux",
                "maxPods": 110,
                "enableAutoScaling": true,
                "minCount": "[parameters('agentpoolMinCountNodes')]",
                "maxCount": "[parameters('agentpoolMaxCountNodes')]",
                "vnetSubnetID": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', parameters('agentpoolSubnetName'))]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "privateDnsZone_DEPLOY_Pyplan38795Z",
            "apiVersion": "2020-06-01",
            "subscriptionId": "[subscription().subscriptionId]",
            "resourceGroup": "[resourceGroup().name]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones",
                            "apiVersion": "2018-09-01",
                            "name": "[concat(parameters('serverName'),'.private.postgres.database.azure.com')]",
                            "location": "global",
                            "tags": {},
                            "properties": {}
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "virtualNetwork_DEPLOY_Pyplan38795Z",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', parameters('virtualNetworkSubnetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/virtualNetworks/subnets",
                            "name": "[concat(parameters('virtualNetworkName'), '/', parameters('virtualNetworkSubnetName'))]",
                            "apiVersion": "2020-05-01",
                            "properties": {
                                "provisioningState": "Succeeded",
                                "addressPrefix": "[parameters('virtualNetworkSubnetAddressPrefix')]",
                                "serviceEndpoints": [],
                                "delegations": [
                                    {
                                        "name": "Microsoft.DBforPostgreSQL.flexibleServers",
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', parameters('virtualNetworkSubnetName'), '/delegations/Microsoft.DBforPostgreSQL.flexibleServers')]",
                                        "etag": "W/\"b2c00a99-0e7a-4fb6-9001-eaebb156ed27\"",
                                        "properties": {
                                            "provisioningState": "Succeeded",
                                            "serviceName": "Microsoft.DBforPostgreSQL/flexibleServers",
                                            "actions": [
                                                "Microsoft.Network/virtualNetworks/subnets/join/action"
                                            ]
                                        },
                                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                    }
                                ],
                                "privateEndpointNetworkPolicies": "Enabled",
                                "privateLinkServiceNetworkPolicies": "Enabled"
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "virtualNetworkLink_DEPLOY_Pyplan38795Z",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "privateDnsZone_DEPLOY_Pyplan38795Z",
                "virtualNetwork_DEPLOY_Pyplan38795Z"
            ],
            "resourceGroup": "[resourceGroup().name]",
            "subscriptionId": "[subscription().subscriptionId]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                            "apiVersion": "2020-06-01",
                            "name": "[concat(parameters('serverName'),'.private.postgres.database.azure.com', '/', uniqueString('Pyplan_virtualLink777'))]",
                            "location": "global",
                            "properties": {
                                "virtualNetwork": {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
                                },
                                "registrationEnabled": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "[variables('api')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "virtualNetworkLink_DEPLOY_Pyplan38795Z"
            ],
            "name": "[parameters('serverName')]",
            "properties": {
                "version": "[parameters('version')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "publicNetworkAccess": "Disabled",
                "DelegatedSubnetArguments": {
                    "SubnetArmResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'), '/subnets/', parameters('virtualNetworkSubnetName'))]"
                },
                "PrivateDnsZoneArguments": {
                    "PrivateDnsZoneArmResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/privateDnsZones/', parameters('serverName'), '.private.postgres.database.azure.com')]"
                },
                "haEnabled": "[parameters('haEnabled')]",
                "storageProfile": {
                    "storageMB": "[parameters('storageSizeMB')]",
                    "backupRetentionDays": "[parameters('backupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
                },
                "availabilityZone": "[parameters('availabilityZone')]"
            },
            "sku": {
                "name": "[parameters('vmName')]",
                "tier": "GeneralPurpose"
            },
            "tags": {},
            "type": "Microsoft.DBforPostgreSQL/flexibleServers"
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "[variables('api')]",
            "dependsOn": [
                "[parameters('serverName')]"
            ],
            "name": "[concat(parameters('serverName'), '/', parameters('dbName'))]",    
            "properties": {}
          }
    ]
}